#!/bin/bash

set -u

echo "Applying configuration"
cp /opt/cinder/etc/cinder/api-httpd.conf /etc/cinder/api-httpd.conf
cp /opt/cinder/etc/cinder/api-paste.ini /etc/cinder/api-paste.ini
cp /opt/cinder/etc/cinder/logging_sample.conf /etc/cinder/logging.conf
cp /opt/cinder/etc/cinder/resource_filters.json /etc/cinder/resource_filters.json
cp /opt/cinder/etc/cinder/rootwrap.conf /etc/cinder/rootwrap.conf
cp /opt/cinder/etc/cinder/rootwrap.d/volume.filters /etc/cinder/rootwrap.d/volume.filters

python2 /opt/configparse.py --config /opt/config/config.json --service "/etc/cinder/cinder.conf"

echo "DB configuration"
{% if database == "mariadb" %}
mysql  -h{{database_ipv4}} -u{{mariadb.mariadb_user}} -p{{mariadb.mariadb_password}} \
    -e "CREATE DATABASE cinder;"

mysql  -h{{database_ipv4}} -u{{mariadb.mariadb_user}} -p{{mariadb.mariadb_password}} \
       -e "GRANT ALL PRIVILEGES ON cinder.* TO 'cinder'@'localhost' \
        IDENTIFIED BY '{{openstack_services.cinder.database_password}}';"

mysql  -h{{database_ipv4}} -u{{mariadb.mariadb_user}} -p{{mariadb.mariadb_password}} \
       -e "GRANT ALL PRIVILEGES ON cinder.* TO 'cinder'@'%' \
        IDENTIFIED BY '{{openstack_services.cinder.database_password}}'"

{% elif database == "postgresql" %}
export PGPASSWORD={{postgresql.postgresql_password}}
psql -h {{database_ipv4}} -p 5432 -v ON_ERROR_STOP=1 --username "{{postgresql.postgresql_user}}" <<-EOSQL
    CREATE USER cinder;
    ALTER USER cinder WITH PASSWORD '{{openstack_services.cinder.database_password}}';
    CREATE DATABASE cinder;
    GRANT ALL PRIVILEGES ON DATABASE cinder TO cinder;
EOSQL
{% endif %}

echo "Syncing db"
cinder-manage db sync

source /opt/osrc-v3

echo "Creating user"
if [ -z `openstack user list -f csv -q |grep cinder` ]
then
    openstack user create --domain Default --password secret cinder
else
    echo "Skipping"
fi


echo "Creating role"
openstack role add --project service --user cinder admin

echo "Creating cinder service"
if [ -z `openstack service list -f csv -q |grep cinder` ]
then
    openstack service create --name volumev2 --description "OpenStack Block Storage" volumev2
    openstack service create --name volumev3 --description "OpenStack Block Storage" volumev3
else
    echo "Skipping"
fi

endpoint=`openstack endpoint list -f csv -q |grep cinder`
if [ -z "$endpoint" ]
then
    echo "Creating public endpoint"
    openstack endpoint create --region RegionOne volumev2 public http://openstack_cinder:8776/v2/%\(project_id\)s

    echo "Creating internal endpoint"
    openstack endpoint create --region RegionOne volumev2 internal http://openstack_cinder:8776/v2/%\(project_id\)s

    echo "Creating admin endpoint"
    openstack endpoint create --region RegionOne volumev2 admin http://openstack_cinder:8776/v2/%\(project_id\)s

    echo "Creating public endpoint"
    openstack endpoint create --region RegionOne volumev3 public http://openstack_cinder:8776/v3/%\(project_id\)s

    echo "Creating internal endpoint"
    openstack endpoint create --region RegionOne volumev3 internal http://openstack_cinder:8776/v3/%\(project_id\)s

    echo "Creating admin endpoint"
    openstack endpoint create --region RegionOne volumev3 admin http://openstack_cinder:8776/v3/%\(project_id\)s
else
    echo "Skipping"
fi

echo "Starting supervisord"
supervisord